@startuml
actor User
participant "App" as App
participant "Backend" as Backend
participant "Room_1" as RS << Roomserver >>
participant "Device_1" as Device <<Device>>

autonumber

RS -> Device: Status request
note left
  {02 00 00}
end note
Device -> RS: Status
note right
  {03 02 00}
end note

User -> App: enter username and password
App -> Backend: HTTP POST /api/register
Backend -> App: HTTP 200 OK
App -> User: successfully registered

User -> RS: enter username and password
RS -> Backend: HTTP POST /api/login
Backend -> RS: HTTP 200 OK
RS -> User: successfully loged in

RS -> Backend: HTTP PUT /api/rooms/1
note right
  {   "roomId": "1"}
end note
Backend -> RS: HTTP 201 Created



RS -> Backend: HTTP PUT /api/rooms/1/devices/1
note right
  {   "deviceId": "1",
      "type"    : "SWITCH",
      "value"   : "0" }
end note
Backend -> RS: HTTP 201 Created





User -> App: Show all rooms
App -> Backend: HTTP GET /api/rooms
Backend -> App: HTTP 200 OK
App -> User: List of rooms

User -> App: Show all devices of room 1
App -> Backend: HTTP GET /api/rooms/1/devices
Backend -> App: HTTP 200 OK
App -> User: List of devices

User -> App: change value of device 1
App -> Backend: HTTP PATCH /api/rooms/1/devices/1
note left
  {   "targetValue": "1"}
end note

Backend -> RS: AMQP /rooms/1/devices/1
note left
  {   "targetValue": "1"}
end note

RS -> Device: Set Value
note left
  {01 01 00}
end note
Device -> RS: Status
note right
  {03 02 01}
end note

RS -> Backend: HTTP PATCH /api/rooms/1/devices/1
note right
  {   "deviceValue": "1"}
end note

Backend -> App: Websocket /rooms/1/devices/1
note right
  {   "deviceValue": "1"}
end note

App -> User: Value changed on device


@enduml
